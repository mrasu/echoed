variable:
  productId: OLJCESPC7Z
scenarios:
  - name: Cart should add item to cart
    variable:
      session: ${createSession()}
    steps:
      - description: Get cart
        act:
          runner: fetch
          argument:
            endpoint: cart?sessionId=${session.userId}&currencyCode=${session.currencyCode}
        assert:
          - expect(_.jsonBody.items.length).toBe(0)
      - description: Add product to cart
        act:
          runner: fetch
          argument:
            endpoint: cart?currencyCode=${session.currencyCode}
            method: POST
            jsonBody:
              item:
                productId: ${productId}
                quantity: 1
              userId: ${session.userId}
        assert:
          - expect(_.response.status).toBe(200)
          - |
            expect(_.jsonBody).toEqual({
              items: [ { productId, quantity: 1 } ],
              userId: session.userId,
            })
      - description: Check product is added to cart
        act:
          runner: fetch
          argument:
            endpoint: cart?sessionId=${session.userId}&currencyCode=${session.currencyCode}
        assert:
          - expect(_.jsonBody.items.length).toBe(1)
