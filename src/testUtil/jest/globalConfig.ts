import { Config } from "@jest/reporters";

const DEFAULT_GLOBAL_CONFIG: Config.GlobalConfig = {
  bail: 0,
  changedFilesWithAncestor: false,
  changedSince: "",
  ci: false,
  collectCoverage: false,
  collectCoverageFrom: [],
  coverageDirectory: "coverage",
  coverageProvider: "babel",
  coverageReporters: [],
  coverageThreshold: { global: {} },
  detectLeaks: false,
  detectOpenHandles: false,
  errorOnDeprecated: false,
  expand: false,
  filter: undefined,
  findRelatedTests: false,
  forceExit: false,
  globalSetup: undefined,
  globalTeardown: undefined,
  json: false,
  lastCommit: false,
  listTests: false,
  logHeapUsage: false,
  maxConcurrency: 5,
  maxWorkers: 2,
  noSCM: undefined,
  noStackTrace: false,
  nonFlagArgs: [],
  notify: false,
  notifyMode: "failure-change",
  onlyChanged: false,
  onlyFailures: false,
  openHandlesTimeout: 1000,
  outputFile: undefined,
  passWithNoTests: false,
  projects: [],
  replname: undefined,
  reporters: [],
  rootDir: "/test_root_dir/",
  runInBand: false,
  runTestsByPath: false,
  seed: 1234,
  silent: false,
  skipFilter: false,
  snapshotFormat: {},
  testFailureExitCode: 1,
  testNamePattern: "",
  testPathPattern: "",
  testResultsProcessor: undefined,
  testSequencer: "@jest/test-sequencer",
  testTimeout: 5000,
  updateSnapshot: "none",
  useStderr: false,
  verbose: false,
  watch: false,
  watchAll: false,
  watchPlugins: [],
  watchman: false,
};

export function buildGlobalConfig(
  overrides: Partial<Config.GlobalConfig> = {},
): Config.GlobalConfig {
  return { ...DEFAULT_GLOBAL_CONFIG, ...overrides };
}
